name: ci
on: [push]
jobs:
  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
        -
          name: Checkout code
          uses: actions/checkout@v2
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.CR_PAT }}
        -
          name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ghcr.io/notaphplover/axel/backend:latest

  build-test:
    name: (OS ${{ matrix.os }}, Node ${{ matrix.node-version }}) Setup machine, build Typescript and launch tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version:
          - 12
          - 14
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
        if: ${{ matrix.os != 'windows-latest' }}

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        if: ${{ matrix.os != 'windows-latest' }}

      - name: Install dependencies
        run: npm ci

      - name: Compile source files
        run: npm run build

      - name: Setup local files
        run: npm run setup:local

      - name: Launch docker images (Linux)
        run: npm run docker:up:ci:linux
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Launch docker images (Non Linux Docker friendly OS)
        run: npm run docker:up:ci
        if: ${{ false }}

      - name: Wait test server (Docker friendly OS)
        run: node ./dist/scripts/waitForApiServer.js
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Launch Tests (Docker friendly OS)
        run: npm run test:js:ci
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Launch Unit Tests (Non Docker friendly OS)
        run: npm run test:unit:js:ci
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'windows-latest' }}

      - name: Start SSH session on failure
        if: ${{ failure() && matrix.os == 'ubuntu-latest' }}
        uses: luchihoratiu/debug-via-ssh@main
        with:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          SSH_PASS: ${{ secrets.SSH_PASS }}

      - name: Don't kill instace on failure
        if: ${{ failure() && matrix.os == 'ubuntu-latest' }}
        run: sleep 1h
